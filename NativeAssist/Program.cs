// See https://aka.ms/new-console-template for more information
using NativeAssist;
using NativeRefHelper.Models;
using System.Diagnostics;
using System.Text.Json;

Console.WriteLine("Native Wrapper Generator for NativeFx");

var natives = JsonSerializer.Deserialize<Dictionary<string, Dictionary<string, NativeFunction>>>(
    NativeAssist.Properties.Resources.natives);

using var str = File.Create("Natives.cs");
using var writer = new StreamWriter(str);

if (natives == null)
{
    Console.WriteLine("Failed to parse native data");
    return -1;
}

var sw = new Stopwatch();
Console.WriteLine("Starting!");
sw.Start();

writer.WriteLine("// Generated by Native Wrapper Generator, for NativeFx");
writer.WriteLine("// {0} | DO NOT MODIFY UNLESS REQUIRED", DateTime.Now);
writer.WriteLine(@"namespace NativeFx.Interop;
using System;
using GTA.Native;
using GTA;
using GTA.Math;

public static class Natives 
{");


foreach (var ns in natives)
{
    Console.WriteLine("NS {0}", ns.Key);
    writer.WriteLine($"#region {ns.Key}");   

    foreach (var native in ns.Value)
    {
        Util.OperateNative(native.Value, native.Key, writer);
    }

    writer.WriteLine($"#endregion");
}

writer.WriteLine("}");

sw.Stop();

Console.WriteLine($"{sw.Elapsed} elapsed");

return 0;